# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'user_dashboard.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from PyQt5.QtWidgets import QMessageBox
from fpdf import FPDF
from user_management import *
from login import *

conn = sqlite3.connect('movie_system.db')
c = conn.cursor()


class Ui_user_window(object):
    def __init__(self, message):
        self.ui = None
        self.window = None
        self.message = message
        query = f"Select * from user_list where username='{message}';"
        c.execute(query)
        x = c.fetchone()
        self.bal = x[3]
        self.uname = x[0]

    def OpenLogin(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Login()
        self.ui.setupUi(self.window)
        self.window.show()

    def setupUi(self, user_window):
        user_window.setObjectName("user_window")
        user_window.resize(1239, 771)
        user_window.setStyleSheet("background-color:rgb(198, 194, 255)")
        self.centralwidget = QtWidgets.QWidget(user_window)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(370, -20, 521, 121))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(470, 60, 521, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(130, 170, 241, 41))
        self.comboBox.setObjectName("comboBox")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(130, 240, 241, 41))
        self.textEdit.setReadOnly(True)
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(130, 310, 241, 41))
        self.textEdit_2.setReadOnly(True)
        self.textEdit_2.setObjectName("textEdit_2")
        self.textEdit_3 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_3.setGeometry(QtCore.QRect(130, 370, 241, 41))
        self.textEdit_3.setReadOnly(True)
        self.textEdit_3.setObjectName("textEdit_3")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(130, 440, 241, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.comboBox_2.setFont(font)
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.comboBox_2.addItem("")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(130, 570, 241, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 100, 201, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 180, 111, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(70, 250, 51, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(80, 320, 41, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(80, 380, 41, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(60, 450, 61, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.dateEdit = QtWidgets.QDateEdit(self.centralwidget)
        self.dateEdit.setGeometry(QtCore.QRect(130, 500, 241, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.dateEdit.setFont(font)
        self.dateEdit.setObjectName("dateEdit")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(80, 510, 41, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(50, 710, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(440, 160, 761, 521))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(6)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(440, 110, 201, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(1030, 80, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.balance = QtWidgets.QLabel(self.centralwidget)
        self.balance.setGeometry(QtCore.QRect(1110, 80, 55, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.balance.setFont(font)
        self.balance.setObjectName("balance")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(1070, 710, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        user_window.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(user_window)
        self.statusbar.setObjectName("statusbar")
        user_window.setStatusBar(self.statusbar)

        self.retranslateUi(user_window)
        QtCore.QMetaObject.connectSlotsByName(user_window)
        # self.pushButton_2.clicked.connect(lambda :self.OpenLogin())
        # self.pushButton_2.clicked.connect(user_window.close)
        self.pushButton_3.clicked.connect(lambda: self.openProfile())

    def retranslateUi(self, user_window):
        _translate = QtCore.QCoreApplication.translate
        user_window.setWindowTitle(_translate("user_window", "User Dashboard"))
        self.label.setText(_translate("user_window", "ANSZ MOVIE TICKETING SYSTEM"))
        self.label_2.setText(_translate("user_window", "USER DASHBOARD"))
        self.comboBox_2.setItemText(0, _translate("user_window", "12 - 3 PM"))
        self.comboBox_2.setItemText(1, _translate("user_window", "3 - 6 PM"))
        self.comboBox_2.setItemText(2, _translate("user_window", "6 - 9 PM"))
        self.pushButton.setText(_translate("user_window", "Buy Ticket"))
        self.label_3.setText(_translate("user_window", "Ticket Buying Section"))
        self.label_4.setText(_translate("user_window", "Choose Movie"))
        self.label_5.setText(_translate("user_window", "Genre"))
        self.label_6.setText(_translate("user_window", "Year"))
        self.label_7.setText(_translate("user_window", "Price"))
        self.label_8.setText(_translate("user_window", "Timings"))
        self.label_9.setText(_translate("user_window", "Date"))
        self.pushButton_2.setText(_translate("user_window", "Log out"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("user_window", "Username"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("user_window", "Movie Name"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("user_window", "Genre"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("user_window", "Year"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("user_window", "Date"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("user_window", "Time"))
        self.label_10.setText(_translate("user_window", "Purchase History"))
        self.label_11.setText(_translate("user_window", "Balance :"))
        self.balance.setText(_translate("user_window", self.bal))
        self.pushButton_3.setText(_translate("user_window", "My Profile"))
        self.comboBox.currentTextChanged.connect(lambda: self.showData())
        self.populateComboBox()
        self.pushButton.clicked.connect(lambda: self.buy_tickets())
        self.displayData()

    def populateComboBox(self):
        self.comboBox.clear()
        self.comboBox.addItem("")
        query = "Select * from movies"
        c.execute(query)
        for item in c.fetchall():
            self.comboBox.addItem(item[0])

    def showData(self):
        c_text = str(self.comboBox.currentText())
        if c_text == "":
            self.textEdit.setText("")
            self.textEdit_2.setText("")
            self.textEdit_3.setText("")
        else:
            query = f"SELECT * from movies Where Name='{c_text}';"
            c.execute(query)
            x = c.fetchone()
            g = x[1]
            p = x[2]
            a = x[3]
            self.textEdit.setText(g)
            self.textEdit_2.setText(p)
            self.textEdit_3.setText(a)

    def buy_tickets(self):
        u_name = self.uname
        m_name = str(self.comboBox.currentText())
        genre = str(self.textEdit.toPlainText())
        year = str(self.textEdit_2.toPlainText())
        timing = str(self.comboBox_2.currentText())
        date = str(self.dateEdit.date().toPyDate())
        price = str(self.textEdit_3.toPlainText())
        if m_name == "" or genre == "" or year == "" or timing == "" or date == "" or price == "":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Please Select a Movie!!")
            msg.setWindowTitle("Error!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
        else:
            query = f"Insert into buying_history values ('{u_name}','{m_name}','{genre}','{year}','{date}','{timing}')"
            balance = self.bal
            total_balance = int(balance)
            t_p = int(price)
            if t_p <= total_balance:
                remaining_balance = total_balance - t_p
                query1 = f"Update user_list set Deposit='{remaining_balance}' where username='{u_name}';"
                c.execute(query)
                c.execute(query1)
                conn.commit()
                pdf = FPDF('P', 'mm', 'Letter')
                pdf.add_page()
                pdf.set_font('helvetica', '', 10)
                pdf.cell(0, 10, 'ANSZ Movie Ticketing System', ln=True, align='C')
                pdf.cell(0, 10, '', ln=True, border=False)
                pdf.cell(0, 10, f"Purchased By : {u_name}", ln=True, border=True)
                pdf.cell(0, 10, f"Movie Name : {m_name}", ln=True, border=True)
                pdf.cell(0, 10, f"Genre : {genre}", ln=True, border=True)
                pdf.cell(0, 10, f"Year : {year}", ln=True, border=True)
                pdf.cell(0, 10, f"Date of Show : {date}", ln=True, border=True)
                pdf.cell(0, 10, f"Timing : {timing}", ln=True, border=True)
                pdf.cell(0, 10, f"Price of Ticket : {price}", ln=True, border=True)
                pdf.cell(0, 10, '', ln=True, border=False)
                pdf.cell(0, 10, "Thanks for trusting us", ln=True, align='C', )
                pdf.output("movie_ticket.pdf")
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("Ticket Bought Successfully - You can Find a PDF Copy in your working directory!!")
                msg.setWindowTitle("Bought!")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()
                self.balance.setText(str(remaining_balance))
                self.displayData()
            else:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Information)
                msg.setText("You Do not Have Sufficient Balance!!")
                msg.setWindowTitle("Error!")
                msg.setStandardButtons(QMessageBox.Ok)
                msg.exec_()

    def displayData(self):
        query = f"Select * from buying_history where username='{self.uname}';"
        self.tableWidget.setRowCount(60)
        tableindex = 0

        for row in c.execute(query):
            self.tableWidget.setItem(tableindex, 0, QtWidgets.QTableWidgetItem(row[0]))
            self.tableWidget.setItem(tableindex, 1, QtWidgets.QTableWidgetItem(row[1]))
            self.tableWidget.setItem(tableindex, 2, QtWidgets.QTableWidgetItem(row[2]))
            self.tableWidget.setItem(tableindex, 3, QtWidgets.QTableWidgetItem(row[3]))
            self.tableWidget.setItem(tableindex, 4, QtWidgets.QTableWidgetItem(row[4]))
            self.tableWidget.setItem(tableindex, 5, QtWidgets.QTableWidgetItem(row[5]))
            tableindex += 1

    def openProfile(self):
        username = self.uname
        self.window = QtWidgets.QMainWindow()
        self.message = username
        self.ui = Ui_mng_window(username)
        self.ui.setupUi(self.window)
        self.window.show()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    user_window = QtWidgets.QMainWindow()
    ui = Ui_user_window()
    ui.setupUi(user_window)
    user_window.show()
    sys.exit(app.exec_())
