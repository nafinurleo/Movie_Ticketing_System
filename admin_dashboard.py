# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'admin_dashboard.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import json
import sqlite3
from login import *
from PyQt5.QtWidgets import QMessageBox

conn = sqlite3.connect('movie_system.db')
c = conn.cursor()


class Ui_admin_window(object):
    def OpenLogin(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Login()
        self.ui.setupUi(self.window)
        self.window.show()

    def setupUi(self, admin_window):
        admin_window.setObjectName("admin_window")
        admin_window.resize(894, 684)
        self.centralwidget = QtWidgets.QWidget(admin_window)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(120, 140, 231, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(120, 210, 231, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.textEdit_2.setFont(font)
        self.textEdit_2.setObjectName("textEdit_2")
        self.textEdit_3 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_3.setGeometry(QtCore.QRect(120, 280, 231, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.textEdit_3.setFont(font)
        self.textEdit_3.setObjectName("textEdit_3")
        self.textEdit_4 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_4.setGeometry(QtCore.QRect(120, 350, 231, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.textEdit_4.setFont(font)
        self.textEdit_4.setObjectName("textEdit_4")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(120, 420, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(480, 160, 311, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(240, 420, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(480, 210, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(240, 40, 391, 81))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(24)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(480, 320, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 150, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(70, 220, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(80, 290, 55, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(20, 360, 101, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(480, 350, 391, 311))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Poppins")
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(480, 140, 101, 16))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(30, 610, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(9)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        admin_window.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(admin_window)
        self.statusbar.setObjectName("statusbar")
        admin_window.setStatusBar(self.statusbar)

        self.retranslateUi(admin_window)
        QtCore.QMetaObject.connectSlotsByName(admin_window)
        self.pushButton_4.clicked.connect(lambda: self.OpenLogin())
        self.pushButton_4.clicked.connect(admin_window.close)
        self.pushButton.clicked.connect(lambda: self.add_movie())

        self.load_userdata()
        self.populateComboBox()
        self.comboBox.currentTextChanged.connect(lambda: self.showData())
        self.pushButton_3.clicked.connect(lambda: self.delete_movie())
        self.pushButton_2.clicked.connect(lambda: self.update_movies())

    def load_userdata(self):
        query = "Select * from User_List"
        self.tableWidget.setRowCount(50)
        tableindex = 0

        for row in c.execute(query):
            self.tableWidget.setItem(tableindex, 0, QtWidgets.QTableWidgetItem(row[0]))
            self.tableWidget.setItem(tableindex, 1, QtWidgets.QTableWidgetItem(row[1]))
            self.tableWidget.setItem(tableindex, 2, QtWidgets.QTableWidgetItem(row[3]))
            tableindex += 1

    def populateComboBox(self):
        self.comboBox.clear()
        self.comboBox.addItem("")
        query = "Select * from movies"
        c.execute(query)
        for item in c.fetchall():
            self.comboBox.addItem(item[0])

    def add_movie(self):
        movie_name = str(self.textEdit.toPlainText())
        genre = str(self.textEdit_2.toPlainText())
        year = str(self.textEdit_3.toPlainText())
        ticket_price = str(self.textEdit_4.toPlainText())
        if movie_name == "" or genre == "" or year == "" or ticket_price == "":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Fields Cannot be Empty!!")
            msg.setWindowTitle("Failed!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
        else:
            c.execute(f"INSERT into movies values ('{movie_name}','{genre}','{year}','{ticket_price}')")
            conn.commit()
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Movie Added Successfully!!")
            msg.setWindowTitle("Added!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
            self.textEdit.clear()
            self.textEdit_2.clear()
            self.textEdit_3.clear()
            self.textEdit_4.clear()
            self.populateComboBox()

    def showData(self):
        c_text = str(self.comboBox.currentText())
        if c_text == "":
            self.textEdit.setText("")
            self.textEdit_2.setText("")
            self.textEdit_3.setText("")
            self.textEdit_4.setText("")
        else:
            query = f"SELECT * from movies Where Name='{c_text}';"
            c.execute(query)
            x = c.fetchone()
            n = x[0]
            g = x[1]
            p = x[2]
            a = x[3]
            self.textEdit.setText(n)
            self.textEdit_2.setText(g)
            self.textEdit_3.setText(p)
            self.textEdit_4.setText(a)

    def delete_movie(self):
        c_text = str(self.comboBox.currentText())
        if c_text == "Select one":
            self.textEdit.setText("")
            self.textEdit_2.setText("")
            self.textEdit_3.setText("")
            self.textEdit_4.setText("")
        else:
            query1 = f"DELETE from movies where Name='{c_text}';"
            c.execute(query1)
            conn.commit()
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Movie Deleted Successfully!!")
            msg.setWindowTitle("Deleted!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
            self.textEdit.setText("")
            self.textEdit_2.setText("")
            self.textEdit_3.setText("")
            self.textEdit_4.setText("")
            self.populateComboBox()

    def update_movies(self):
        c_text = str(self.comboBox.currentText())
        # movie_name = str(self.textEdit.toPlainText())
        genre = str(self.textEdit_2.toPlainText())
        year = str(self.textEdit_3.toPlainText())
        ticket_price = str(self.textEdit_4.toPlainText())
        if c_text=="" or genre=="" or year=="" or ticket_price=="":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Fields Cannot be Empty!!")
            msg.setWindowTitle("Failed!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()
        else:
            query = f"Update movies set Genre='{genre}', Year='{year}', Price='{ticket_price}' where Name='{c_text}';"
            c.execute(query)
            conn.commit()
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("Movie Deatils Updated Successfully!!")
            msg.setWindowTitle("Updated!")
            msg.setStandardButtons(QMessageBox.Ok)
            msg.exec_()

    def retranslateUi(self, admin_window):
        _translate = QtCore.QCoreApplication.translate
        admin_window.setWindowTitle(_translate("admin_window", "Admin Dashboard"))
        self.pushButton.setText(_translate("admin_window", "Add Movie"))
        self.comboBox.setItemText(0, _translate("admin_window", "Select One"))
        self.pushButton_2.setText(_translate("admin_window", "Update"))
        self.pushButton_3.setText(_translate("admin_window", "Delete Movie"))
        self.label.setText(_translate("admin_window", "ADMIN DASHBOARD"))
        self.label_2.setText(_translate("admin_window", "User List"))
        self.label_3.setText(_translate("admin_window", "Movie Name"))
        self.label_4.setText(_translate("admin_window", "Genre"))
        self.label_5.setText(_translate("admin_window", "Year"))
        self.label_6.setText(_translate("admin_window", "Price in Taka"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("admin_window", "Username"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("admin_window", "Email"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("admin_window", "Balance"))
        self.label_7.setText(_translate("admin_window", "Select Movie"))
        self.pushButton_4.setText(_translate("admin_window", "Log out"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    admin_window = QtWidgets.QMainWindow()
    ui = Ui_admin_window()
    ui.setupUi(admin_window)
    admin_window.show()
    sys.exit(app.exec_())
